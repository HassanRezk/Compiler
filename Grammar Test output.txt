argument -> identifier more_arguments 

##################################################################
has_assignment -> assignment ';' 
EPSILON 

##################################################################
function_call -> identifier '(' arguments ')' 

##################################################################
while_loop -> 'while' '(' expr ')' 
statements 
'endwhile' 

##################################################################
after_parameter -> ',' parameter after_parameter 
EPSILON 

##################################################################
sign -> '+' 
'-' 
EPSILON 

##################################################################
statements -> statement 
EPSILON 

##################################################################
program -> '{' directive 
function_declaration 
function_definition 
declarative '}' 
'start' 'main' '(' ')' statements 'end' 'main' '(' ')' 

##################################################################
integer -> sign digits 

##################################################################
type -> 'void' 
'double' 
'int' 
'boolean' 

##################################################################
after_character -> character after_character 
digit after_character 
EPSILON 

##################################################################
character -> 'a' 
'b' 
'c' 
'd' 
'e' 
'f' 
'g' 
'h' 
'i' 
'j' 
'k' 
'l' 
'm' 
'n' 
| 'o' 
'p' 
'q' 
'r' 
's' 
't' 
'u' 
'v' 
'w' 
'x' 
'y' 
'z' 
'A' 
|'C' 
|'E' 
|'G' 
|'I' 
|'K' 
|'M' 
|'O' 
|'Q' 
|'S' 
|'T' 
|'V' 
|'X' 
|'Z' 
'_' 

##################################################################
cache_out_statement -> 'cache' 'out' identifier ';' 

##################################################################
continue -> 'continue' ';' 

##################################################################
parameter -> type identifier 

##################################################################
statement -> declarative 
assigmnent 
for_loop 
while_loop 
do_while_loop 
| if_condition 
return 
continue 
break 
function_call 

##################################################################
expr -> addition 

##################################################################
for_loop -> 'for' '(' declarative ';' expr 
EPSILON ';' expr ')' statements 'endfor' 

##################################################################
Equality -> Relational 
expr '==' Relational 
expr '!=' Relational 

##################################################################
multiply -> logical 
logical '*' logical 
logical '/' logical 
logical '//' logical 
logical '%' logical 

##################################################################
declarative -> type identifier has_assignment 

##################################################################
cache_statement -> 'cache' identifier ';' 

##################################################################
unload_statement -> 'unload' '"' filename '"' ';' 

##################################################################
function_declaration -> 'start' identifier '(' parameter after_parameter 
EPSILON ')' ':' type ';' 

##################################################################
digit -> '0' 
'1' 
'2' 
'3' 
'4' 
'5' 
'6' 
'7' 
'8' 
'9' 

##################################################################
if_condition -> 'if' '(' expr ')' 
statements 
'endif' 

##################################################################
addition -> multiply '+' multiply 
multiply '-' multiply 

##################################################################
identifier -> character after_character 

##################################################################
do_while_loop -> 'do' 
statements 
statements 'continue' ';' 
'end' 'while' '(' expr ')' 

##################################################################
break -> 'break' ';' 

##################################################################
double -> sign digits '.' digits 

##################################################################
assignment -> '=' expr 
function_call 

##################################################################
load_statement -> 'load' '"' filename '"' ';' 

##################################################################
Relational -> 	'(' condition ')' 
expr '<=' expr 
expr '>=' expr 
| expr '<' expr 
expr '>' expr 

##################################################################
more_arguments -> ',' argument 
EPSILON 

##################################################################
logical -> identifier 
'(' expr ')' 
value 
number 
identifier '&' identifier 
| identifier '^' identifier 
identifier '|' identifier 

##################################################################
directive -> load_statement 
unload_statement 
cache_statement 
cache_out_statement 
EPSILON 

##################################################################
condition -> Equality '&&' Equality 
Equality '||' Equality 

##################################################################
digits -> digit 
EPSILON 

##################################################################
arguments -> argument 
EPSILON 

##################################################################
return -> 'return' ';' 
'return' identifier ';' 

##################################################################
function_definition -> function_declaration statements 'end' 

##################################################################

